#!r6rs
(import (rnrs)
	(springkussen cms)
	(springkussen pem)
	(springkussen cipher password)
	(springkussen signature) ;; for private-key?
	(springkussen keystore) ;; to load PKCS#12 specific encryption OIDs
	(srfi :64))

(pkcs12-keystore-builder) ;; Chez doesn't load library until it's used...

;; tests only documented part...
;; We don't want to expost this library but there's not many good locations
;; to do it...
(test-begin "CMS")

(define (test-encrypted-private-key pem-string password)
  (define kek (make-pbe-key password))
  (let ((pem-object (string->pem-object pem-string)))
    (test-assert (cms-encrypted-private-key-info?
		  (pem-object->cms-encrypted-private-key-info pem-object)))
    (let ((epki (pem-object->cms-encrypted-private-key-info pem-object)))
      (test-assert (private-key?
		    (cms-encrypted-private-key-info->private-key epki kek)))
      (let ((pk (cms-encrypted-private-key-info->private-key epki kek)))
	(test-assert (cms-encrypted-private-key-info?
		      (private-key->cms-encrypted-private-key-info pk kek)))))))

;; Generated by Keystore Explorer, using PKCS#12 encryption algorithm
(test-encrypted-private-key
 "-----BEGIN ENCRYPTED PRIVATE KEY-----
MIG5MBwGCiqGSIb3DQEMAQQwDgQIIJ4VJOWemfICAgXoBIGYl+aiGVMtrmmWtQHu
1Q6wQy8PDFRbvqxs3gGatIqXBPlk+CNX/PWcSUn1CXXw/d0v1Hb6BEtg8j/JUPv1
/FVNCBwWW4LY6yzHXRq+2bOwmd2Ivzveq1HwrUVv9/t5RZLyxzWjkcDTeweTeL2N
apQZVu0fzG/dGKb6fkTDufrqT47cMtFkcobC8Pe/zQaPiGZ8nDkxCwpclKY=
-----END ENCRYPTED PRIVATE KEY-----"
 "test")

;; Generated by OpenSSL, using PBES2
(test-encrypted-private-key
 "-----BEGIN ENCRYPTED PRIVATE KEY-----
MIHVMEAGCSqGSIb3DQEFDTAzMBsGCSqGSIb3DQEFDDAOBAjme5aQxJazwQICCAAw
FAYIKoZIhvcNAwcECA95ye2Y6WOuBIGQGZuAskbZmlr3EjilrCv92gk7iejiqEbW
CF71VAF+IDkGFiVU5TTLLS76nOdM5c6DhgSWIX97BSrXk/EF4akBrk5Fuh1y5YMw
p5Acg4ZMB76A5uxPLgoo4VViFmPIYRdfXYJvC/8JPkLi03irIoDseahHTgxtGwqP
rsVuKldqIluTiTtcfJ5cXciZMB+DXGoc
-----END ENCRYPTED PRIVATE KEY-----"
 "test")

(test-end)
(exit (test-runner-fail-count (test-runner-current)))
	
